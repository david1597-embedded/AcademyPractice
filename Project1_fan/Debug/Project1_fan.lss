
Project1_fan.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000316  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002c2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000316  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000348  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000a0  00000000  00000000  00000388  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001128  00000000  00000000  00000428  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000bdf  00000000  00000000  00001550  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000683  00000000  00000000  0000212f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000e0  00000000  00000000  000027b4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005ad  00000000  00000000  00002894  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000025d  00000000  00000000  00002e41  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  0000309e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	77 d0       	rcall	.+238    	; 0x188 <main>
  9a:	11 c1       	rjmp	.+546    	; 0x2be <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <fanInit>:
  9e:	fc 01       	movw	r30, r24
  a0:	93 b7       	in	r25, 0x33	; 51
  a2:	9e 66       	ori	r25, 0x6E	; 110
  a4:	93 bf       	out	0x33, r25	; 51
  a6:	88 e3       	ldi	r24, 0x38	; 56
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	91 83       	std	Z+1, r25	; 0x01
  ac:	80 83       	st	Z, r24
  ae:	62 83       	std	Z+2, r22	; 0x02
  b0:	27 b3       	in	r18, 0x17	; 23
  b2:	81 e0       	ldi	r24, 0x01	; 1
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	02 c0       	rjmp	.+4      	; 0xbc <fanInit+0x1e>
  b8:	88 0f       	add	r24, r24
  ba:	99 1f       	adc	r25, r25
  bc:	6a 95       	dec	r22
  be:	e2 f7       	brpl	.-8      	; 0xb8 <fanInit+0x1a>
  c0:	82 2b       	or	r24, r18
  c2:	87 bb       	out	0x17, r24	; 23
  c4:	08 95       	ret

000000c6 <setDuty>:
  c6:	2f ef       	ldi	r18, 0xFF	; 255
  c8:	82 9f       	mul	r24, r18
  ca:	c0 01       	movw	r24, r0
  cc:	11 24       	eor	r1, r1
  ce:	64 e6       	ldi	r22, 0x64	; 100
  d0:	70 e0       	ldi	r23, 0x00	; 0
  d2:	ce d0       	rcall	.+412    	; 0x270 <__divmodhi4>
  d4:	61 bf       	out	0x31, r22	; 49
  d6:	08 95       	ret

000000d8 <fndInit>:
  d8:	2b e3       	ldi	r18, 0x3B	; 59
  da:	30 e0       	ldi	r19, 0x00	; 0
  dc:	fc 01       	movw	r30, r24
  de:	31 83       	std	Z+1, r19	; 0x01
  e0:	20 83       	st	Z, r18
  e2:	8f ef       	ldi	r24, 0xFF	; 255
  e4:	8a bb       	out	0x1a, r24	; 26
  e6:	08 95       	ret

000000e8 <fndOn>:
  e8:	dc 01       	movw	r26, r24
  ea:	ed 91       	ld	r30, X+
  ec:	fc 91       	ld	r31, X
  ee:	db 01       	movw	r26, r22
  f0:	a4 0f       	add	r26, r20
  f2:	b1 1d       	adc	r27, r1
  f4:	8c 91       	ld	r24, X
  f6:	80 83       	st	Z, r24
  f8:	08 95       	ret

000000fa <buttonInit>:
  fa:	fc 01       	movw	r30, r24
  fc:	71 83       	std	Z+1, r23	; 0x01
  fe:	60 83       	st	Z, r22
 100:	53 83       	std	Z+3, r21	; 0x03
 102:	42 83       	std	Z+2, r20	; 0x02
 104:	24 83       	std	Z+4, r18	; 0x04
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	85 83       	std	Z+5, r24	; 0x05
 10a:	fb 01       	movw	r30, r22
 10c:	30 81       	ld	r19, Z
 10e:	81 e0       	ldi	r24, 0x01	; 1
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	02 c0       	rjmp	.+4      	; 0x118 <buttonInit+0x1e>
 114:	88 0f       	add	r24, r24
 116:	99 1f       	adc	r25, r25
 118:	2a 95       	dec	r18
 11a:	e2 f7       	brpl	.-8      	; 0x114 <buttonInit+0x1a>
 11c:	80 95       	com	r24
 11e:	83 23       	and	r24, r19
 120:	80 83       	st	Z, r24
 122:	08 95       	ret

00000124 <buttonGetState>:
 124:	fc 01       	movw	r30, r24
 126:	a2 81       	ldd	r26, Z+2	; 0x02
 128:	b3 81       	ldd	r27, Z+3	; 0x03
 12a:	8c 91       	ld	r24, X
 12c:	21 e0       	ldi	r18, 0x01	; 1
 12e:	30 e0       	ldi	r19, 0x00	; 0
 130:	04 80       	ldd	r0, Z+4	; 0x04
 132:	02 c0       	rjmp	.+4      	; 0x138 <buttonGetState+0x14>
 134:	22 0f       	add	r18, r18
 136:	33 1f       	adc	r19, r19
 138:	0a 94       	dec	r0
 13a:	e2 f7       	brpl	.-8      	; 0x134 <buttonGetState+0x10>
 13c:	28 23       	and	r18, r24
 13e:	71 f4       	brne	.+28     	; 0x15c <buttonGetState+0x38>
 140:	85 81       	ldd	r24, Z+5	; 0x05
 142:	81 30       	cpi	r24, 0x01	; 1
 144:	59 f4       	brne	.+22     	; 0x15c <buttonGetState+0x38>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 146:	2f ef       	ldi	r18, 0xFF	; 255
 148:	30 e7       	ldi	r19, 0x70	; 112
 14a:	92 e0       	ldi	r25, 0x02	; 2
 14c:	21 50       	subi	r18, 0x01	; 1
 14e:	30 40       	sbci	r19, 0x00	; 0
 150:	90 40       	sbci	r25, 0x00	; 0
 152:	e1 f7       	brne	.-8      	; 0x14c <buttonGetState+0x28>
 154:	00 c0       	rjmp	.+0      	; 0x156 <buttonGetState+0x32>
 156:	00 00       	nop
 158:	15 82       	std	Z+5, r1	; 0x05
 15a:	08 95       	ret
 15c:	22 23       	and	r18, r18
 15e:	81 f0       	breq	.+32     	; 0x180 <buttonGetState+0x5c>
 160:	85 81       	ldd	r24, Z+5	; 0x05
 162:	81 11       	cpse	r24, r1
 164:	0f c0       	rjmp	.+30     	; 0x184 <buttonGetState+0x60>
 166:	2f ef       	ldi	r18, 0xFF	; 255
 168:	30 e7       	ldi	r19, 0x70	; 112
 16a:	82 e0       	ldi	r24, 0x02	; 2
 16c:	21 50       	subi	r18, 0x01	; 1
 16e:	30 40       	sbci	r19, 0x00	; 0
 170:	80 40       	sbci	r24, 0x00	; 0
 172:	e1 f7       	brne	.-8      	; 0x16c <buttonGetState+0x48>
 174:	00 c0       	rjmp	.+0      	; 0x176 <buttonGetState+0x52>
 176:	00 00       	nop
 178:	81 e0       	ldi	r24, 0x01	; 1
 17a:	85 83       	std	Z+5, r24	; 0x05
 17c:	82 e0       	ldi	r24, 0x02	; 2
 17e:	08 95       	ret
 180:	80 e0       	ldi	r24, 0x00	; 0
 182:	08 95       	ret
 184:	80 e0       	ldi	r24, 0x00	; 0
 186:	08 95       	ret

00000188 <main>:
#include "device/FND_1DIGIT.h"
#include "device/FAN.h"


int main(void)
{
 188:	cf 93       	push	r28
 18a:	df 93       	push	r29
 18c:	cd b7       	in	r28, 0x3d	; 61
 18e:	de b7       	in	r29, 0x3e	; 62
 190:	6a 97       	sbiw	r28, 0x1a	; 26
 192:	0f b6       	in	r0, 0x3f	; 63
 194:	f8 94       	cli
 196:	de bf       	out	0x3e, r29	; 62
 198:	0f be       	out	0x3f, r0	; 63
 19a:	cd bf       	out	0x3d, r28	; 61
	uint8_t FND_Number[]={0x6D,0x06,0x5B};
 19c:	8d e6       	ldi	r24, 0x6D	; 109
 19e:	89 83       	std	Y+1, r24	; 0x01
 1a0:	86 e0       	ldi	r24, 0x06	; 6
 1a2:	8a 83       	std	Y+2, r24	; 0x02
 1a4:	8b e5       	ldi	r24, 0x5B	; 91
 1a6:	8b 83       	std	Y+3, r24	; 0x03
	BUTTON btn_MODE1;
	BUTTON btn_MODE2;
	FND fnd;
	FAN fan;
	
	buttonInit(&btn_STOP, &BUTTON_DDR, &BUTTON_PIN, BUTTON_STOP);
 1a8:	22 e0       	ldi	r18, 0x02	; 2
 1aa:	43 e6       	ldi	r20, 0x63	; 99
 1ac:	50 e0       	ldi	r21, 0x00	; 0
 1ae:	64 e6       	ldi	r22, 0x64	; 100
 1b0:	70 e0       	ldi	r23, 0x00	; 0
 1b2:	ce 01       	movw	r24, r28
 1b4:	04 96       	adiw	r24, 0x04	; 4
 1b6:	a1 df       	rcall	.-190    	; 0xfa <buttonInit>
	buttonInit(&btn_MODE1, &BUTTON_DDR, &BUTTON_PIN, BUTTON_MODE1);
 1b8:	24 e0       	ldi	r18, 0x04	; 4
 1ba:	43 e6       	ldi	r20, 0x63	; 99
 1bc:	50 e0       	ldi	r21, 0x00	; 0
 1be:	64 e6       	ldi	r22, 0x64	; 100
 1c0:	70 e0       	ldi	r23, 0x00	; 0
 1c2:	ce 01       	movw	r24, r28
 1c4:	0a 96       	adiw	r24, 0x0a	; 10
 1c6:	99 df       	rcall	.-206    	; 0xfa <buttonInit>
	buttonInit(&btn_MODE2, &BUTTON_DDR, &BUTTON_PIN, BUTTON_MODE2);
 1c8:	23 e0       	ldi	r18, 0x03	; 3
 1ca:	43 e6       	ldi	r20, 0x63	; 99
 1cc:	50 e0       	ldi	r21, 0x00	; 0
 1ce:	64 e6       	ldi	r22, 0x64	; 100
 1d0:	70 e0       	ldi	r23, 0x00	; 0
 1d2:	ce 01       	movw	r24, r28
 1d4:	40 96       	adiw	r24, 0x10	; 16
 1d6:	91 df       	rcall	.-222    	; 0xfa <buttonInit>
	fanInit(&fan,FAN_PIN);
 1d8:	64 e0       	ldi	r22, 0x04	; 4
 1da:	ce 01       	movw	r24, r28
 1dc:	48 96       	adiw	r24, 0x18	; 24
	fndInit(&fnd);
 1de:	5f df       	rcall	.-322    	; 0x9e <fanInit>
 1e0:	ce 01       	movw	r24, r28
 1e2:	46 96       	adiw	r24, 0x16	; 22
 1e4:	79 df       	rcall	.-270    	; 0xd8 <fndInit>
	
	//Initializing
	fndOn(&fnd, FND_Number, (uint8_t)stop);
 1e6:	40 e0       	ldi	r20, 0x00	; 0
 1e8:	be 01       	movw	r22, r28
 1ea:	6f 5f       	subi	r22, 0xFF	; 255
 1ec:	7f 4f       	sbci	r23, 0xFF	; 255
 1ee:	ce 01       	movw	r24, r28
 1f0:	46 96       	adiw	r24, 0x16	; 22
	currentmode = stop;
	/* Replace with your application code */
	while (1)
	{
		if(buttonGetState(&btn_STOP) == ACT_PUSH)
 1f2:	7a df       	rcall	.-268    	; 0xe8 <fndOn>
 1f4:	ce 01       	movw	r24, r28
 1f6:	04 96       	adiw	r24, 0x04	; 4
 1f8:	95 df       	rcall	.-214    	; 0x124 <buttonGetState>
 1fa:	81 30       	cpi	r24, 0x01	; 1
		{
			fndOn(&fnd, FND_Number, (uint8_t)stop);		
 1fc:	51 f4       	brne	.+20     	; 0x212 <main+0x8a>
 1fe:	40 e0       	ldi	r20, 0x00	; 0
 200:	be 01       	movw	r22, r28
 202:	6f 5f       	subi	r22, 0xFF	; 255
 204:	7f 4f       	sbci	r23, 0xFF	; 255
 206:	ce 01       	movw	r24, r28
			setDuty(0);		
 208:	46 96       	adiw	r24, 0x16	; 22
 20a:	6e df       	rcall	.-292    	; 0xe8 <fndOn>
 20c:	80 e0       	ldi	r24, 0x00	; 0
 20e:	5b df       	rcall	.-330    	; 0xc6 <setDuty>
			currentmode = stop;
		}
	    else if(buttonGetState(&btn_MODE1) == ACT_PUSH)
 210:	28 c0       	rjmp	.+80     	; 0x262 <main+0xda>
 212:	ce 01       	movw	r24, r28
 214:	0a 96       	adiw	r24, 0x0a	; 10
 216:	86 df       	rcall	.-244    	; 0x124 <buttonGetState>
		{
			fndOn(&fnd, FND_Number, (uint8_t)mode1);
 218:	81 30       	cpi	r24, 0x01	; 1
 21a:	a9 f4       	brne	.+42     	; 0x246 <main+0xbe>
 21c:	41 e0       	ldi	r20, 0x01	; 1
 21e:	be 01       	movw	r22, r28
 220:	6f 5f       	subi	r22, 0xFF	; 255
 222:	7f 4f       	sbci	r23, 0xFF	; 255
 224:	ce 01       	movw	r24, r28
 226:	46 96       	adiw	r24, 0x16	; 22
			setDuty(100);
 228:	5f df       	rcall	.-322    	; 0xe8 <fndOn>
 22a:	84 e6       	ldi	r24, 0x64	; 100
 22c:	4c df       	rcall	.-360    	; 0xc6 <setDuty>
 22e:	2f ef       	ldi	r18, 0xFF	; 255
 230:	80 e7       	ldi	r24, 0x70	; 112
 232:	92 e0       	ldi	r25, 0x02	; 2
 234:	21 50       	subi	r18, 0x01	; 1
 236:	80 40       	sbci	r24, 0x00	; 0
 238:	90 40       	sbci	r25, 0x00	; 0
 23a:	e1 f7       	brne	.-8      	; 0x234 <main+0xac>
			_delay_ms(50);
			setDuty(50);
 23c:	00 c0       	rjmp	.+0      	; 0x23e <main+0xb6>
 23e:	00 00       	nop
 240:	82 e3       	ldi	r24, 0x32	; 50
			currentmode = mode1;		
		}
		else if(buttonGetState(&btn_MODE2)==ACT_PUSH)
 242:	41 df       	rcall	.-382    	; 0xc6 <setDuty>
 244:	0e c0       	rjmp	.+28     	; 0x262 <main+0xda>
 246:	ce 01       	movw	r24, r28
 248:	40 96       	adiw	r24, 0x10	; 16
 24a:	6c df       	rcall	.-296    	; 0x124 <buttonGetState>
		{
			fndOn(&fnd, FND_Number, (uint8_t)mode2);
 24c:	81 30       	cpi	r24, 0x01	; 1
 24e:	49 f4       	brne	.+18     	; 0x262 <main+0xda>
 250:	42 e0       	ldi	r20, 0x02	; 2
 252:	be 01       	movw	r22, r28
 254:	6f 5f       	subi	r22, 0xFF	; 255
 256:	7f 4f       	sbci	r23, 0xFF	; 255
 258:	ce 01       	movw	r24, r28
 25a:	46 96       	adiw	r24, 0x16	; 22
			setDuty(100);
 25c:	45 df       	rcall	.-374    	; 0xe8 <fndOn>
 25e:	84 e6       	ldi	r24, 0x64	; 100
 260:	32 df       	rcall	.-412    	; 0xc6 <setDuty>
 262:	8f e3       	ldi	r24, 0x3F	; 63
 264:	9c e9       	ldi	r25, 0x9C	; 156
 266:	01 97       	sbiw	r24, 0x01	; 1
 268:	f1 f7       	brne	.-4      	; 0x266 <main+0xde>
 26a:	00 c0       	rjmp	.+0      	; 0x26c <main+0xe4>
 26c:	00 00       	nop
 26e:	c2 cf       	rjmp	.-124    	; 0x1f4 <main+0x6c>

00000270 <__divmodhi4>:
 270:	97 fb       	bst	r25, 7
 272:	07 2e       	mov	r0, r23
 274:	16 f4       	brtc	.+4      	; 0x27a <__divmodhi4+0xa>
 276:	00 94       	com	r0
 278:	06 d0       	rcall	.+12     	; 0x286 <__divmodhi4_neg1>
 27a:	77 fd       	sbrc	r23, 7
 27c:	08 d0       	rcall	.+16     	; 0x28e <__divmodhi4_neg2>
 27e:	0b d0       	rcall	.+22     	; 0x296 <__udivmodhi4>
 280:	07 fc       	sbrc	r0, 7
 282:	05 d0       	rcall	.+10     	; 0x28e <__divmodhi4_neg2>
 284:	3e f4       	brtc	.+14     	; 0x294 <__divmodhi4_exit>

00000286 <__divmodhi4_neg1>:
 286:	90 95       	com	r25
 288:	81 95       	neg	r24
 28a:	9f 4f       	sbci	r25, 0xFF	; 255
 28c:	08 95       	ret

0000028e <__divmodhi4_neg2>:
 28e:	70 95       	com	r23
 290:	61 95       	neg	r22
 292:	7f 4f       	sbci	r23, 0xFF	; 255

00000294 <__divmodhi4_exit>:
 294:	08 95       	ret

00000296 <__udivmodhi4>:
 296:	aa 1b       	sub	r26, r26
 298:	bb 1b       	sub	r27, r27
 29a:	51 e1       	ldi	r21, 0x11	; 17
 29c:	07 c0       	rjmp	.+14     	; 0x2ac <__udivmodhi4_ep>

0000029e <__udivmodhi4_loop>:
 29e:	aa 1f       	adc	r26, r26
 2a0:	bb 1f       	adc	r27, r27
 2a2:	a6 17       	cp	r26, r22
 2a4:	b7 07       	cpc	r27, r23
 2a6:	10 f0       	brcs	.+4      	; 0x2ac <__udivmodhi4_ep>
 2a8:	a6 1b       	sub	r26, r22
 2aa:	b7 0b       	sbc	r27, r23

000002ac <__udivmodhi4_ep>:
 2ac:	88 1f       	adc	r24, r24
 2ae:	99 1f       	adc	r25, r25
 2b0:	5a 95       	dec	r21
 2b2:	a9 f7       	brne	.-22     	; 0x29e <__udivmodhi4_loop>
 2b4:	80 95       	com	r24
 2b6:	90 95       	com	r25
 2b8:	bc 01       	movw	r22, r24
 2ba:	cd 01       	movw	r24, r26
 2bc:	08 95       	ret

000002be <_exit>:
 2be:	f8 94       	cli

000002c0 <__stop_program>:
 2c0:	ff cf       	rjmp	.-2      	; 0x2c0 <__stop_program>
